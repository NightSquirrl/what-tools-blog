import comp from "D:/code/whatToolsBlog/src/.vuepress/.temp/pages/rear-end/JavaWeb/7-AOP.html.vue"
const data = JSON.parse("{\"path\":\"/rear-end/JavaWeb/7-AOP.html\",\"title\":\"😤 7.springboot-AOP\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"😤 7.springboot-AOP\",\"tag\":[\"SpringBoot\",\"JavaWeb\"],\"recommend\":7,\"description\":\"1. 事务管理 事务的操作主要有三步： 开启事务（一组操作开始前，开启事务）：start transaction / begin ; 提交事务（这组操作全部成功后，提交事务）：commit ; 回滚事务（中间任何一个操作出现异常，回滚事务）：rollback ; 1.1 Spring事务管理 Transactional注解 @Transactional...\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://soft-vault.com/rear-end/JavaWeb/7-AOP.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"Night.Soul\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"😤 7.springboot-AOP\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"1. 事务管理 事务的操作主要有三步： 开启事务（一组操作开始前，开启事务）：start transaction / begin ; 提交事务（这组操作全部成功后，提交事务）：commit ; 回滚事务（中间任何一个操作出现异常，回滚事务）：rollback ; 1.1 Spring事务管理 Transactional注解 @Transactional...\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:image\",\"content\":\"https://img.picgo.net/2023/11/18/image-202311182027219288e094ed7b6dbaf97.png\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"name\":\"twitter:card\",\"content\":\"summary_large_image\"}],[\"meta\",{\"name\":\"twitter:image:alt\",\"content\":\"😤 7.springboot-AOP\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"Night.Soul\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"SpringBoot\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"JavaWeb\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"😤 7.springboot-AOP\\\",\\\"image\\\":[\\\"https://img.picgo.net/2023/11/18/image-202311182027219288e094ed7b6dbaf97.png\\\"],\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"Night.Soul\\\",\\\"url\\\":\\\"https://github.com/NightSquirrl\\\"}]}\"]]},\"headers\":[{\"level\":2,\"title\":\"1. 事务管理\",\"slug\":\"_1-事务管理\",\"link\":\"#_1-事务管理\",\"children\":[{\"level\":3,\"title\":\"1.1 Spring事务管理\",\"slug\":\"_1-1-spring事务管理\",\"link\":\"#_1-1-spring事务管理\",\"children\":[]}]},{\"level\":2,\"title\":\"2. AOP\",\"slug\":\"_2-aop\",\"link\":\"#_2-aop\",\"children\":[{\"level\":3,\"title\":\"2.1 AOP概述\",\"slug\":\"_2-1-aop概述\",\"link\":\"#_2-1-aop概述\",\"children\":[]},{\"level\":3,\"title\":\"2.2 AOP快速入门实现步骤：\",\"slug\":\"_2-2-aop快速入门实现步骤\",\"link\":\"#_2-2-aop快速入门实现步骤\",\"children\":[]},{\"level\":3,\"title\":\"2.3 AOP核心概念\",\"slug\":\"_2-3-aop核心概念\",\"link\":\"#_2-3-aop核心概念\",\"children\":[]}]},{\"level\":2,\"title\":\"3. 事物进阶\",\"slug\":\"_3-事物进阶\",\"link\":\"#_3-事物进阶\",\"children\":[{\"level\":3,\"title\":\"3.1 通知类型\",\"slug\":\"_3-1-通知类型\",\"link\":\"#_3-1-通知类型\",\"children\":[]},{\"level\":3,\"title\":\"3.2 抽取切入点表达式\",\"slug\":\"_3-2-抽取切入点表达式\",\"link\":\"#_3-2-抽取切入点表达式\",\"children\":[]},{\"level\":3,\"title\":\"3.3 通知顺序\",\"slug\":\"_3-3-通知顺序\",\"link\":\"#_3-3-通知顺序\",\"children\":[]},{\"level\":3,\"title\":\"3.4 切入点表达式\",\"slug\":\"_3-4-切入点表达式\",\"link\":\"#_3-4-切入点表达式\",\"children\":[]}]}],\"readingTime\":{\"minutes\":8.87,\"words\":2661},\"filePathRelative\":\"rear-end/JavaWeb/7-AOP.md\",\"excerpt\":\"<h2>1. 事务管理</h2>\\n<p>事务的操作主要有三步：</p>\\n<ol>\\n<li>\\n<p>开启事务（一组操作开始前，开启事务）：start transaction / begin ;</p>\\n</li>\\n<li>\\n<p>提交事务（这组操作全部成功后，提交事务）：commit ;</p>\\n</li>\\n<li>\\n<p>回滚事务（中间任何一个操作出现异常，回滚事务）：rollback ;</p>\\n</li>\\n</ol>\\n<h3>1.1 <strong>Spring</strong>事务管理</h3>\\n<h4><strong>Transactional</strong>注解</h4>\\n<blockquote>\\n<p>@Transactional作用：就是在当前这个方法执行开始之前来开启事务，方法执行完毕之后提交事务。如果在这个方法执行的过程当中出现了异常，就会进行事务的回滚操作。</p>\\n<p>@Transactional注解：我们一般会在业务层当中来控制事务，因为在业务层当中，一个业务功能可能会包含多个数据访问的操作。在业务层来控制事务，我们就可以将多个数据访问操作控制在一个事务范围内。</p>\\n</blockquote>\",\"autoDesc\":true}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
