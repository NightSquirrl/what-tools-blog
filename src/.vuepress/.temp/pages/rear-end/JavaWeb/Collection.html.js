import comp from "D:/code/whatToolsBlog/src/.vuepress/.temp/pages/rear-end/JavaWeb/Collection.html.vue"
const data = JSON.parse("{\"path\":\"/rear-end/JavaWeb/Collection.html\",\"title\":\"😤 Javaweb 收集\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"😤 Javaweb 收集\",\"sticky\":98,\"tag\":[\"SpringBoot\",\"JavaWeb\"],\"recommend\":0,\"description\":\"1. 配置 2. lombok Lombok是一个实用的Java类库，可以通过简单的注解来简化和消除一些必须有但显得很臃肿的Java代码。 通过注解的形式自动生成构造器、getter/setter、equals、hashcode、toString等方法，并可以自动化生成日志变量，简化java开发、提高效率。 image-2023111723470237...\",\"gitInclude\":[],\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://soft-vault.com/rear-end/JavaWeb/Collection.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"Night.Soul\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"😤 Javaweb 收集\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"1. 配置 2. lombok Lombok是一个实用的Java类库，可以通过简单的注解来简化和消除一些必须有但显得很臃肿的Java代码。 通过注解的形式自动生成构造器、getter/setter、equals、hashcode、toString等方法，并可以自动化生成日志变量，简化java开发、提高效率。 image-2023111723470237...\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:image\",\"content\":\"https://img.picgo.net/2023/11/17/image-202311172347023778abf09bb52abba08.png\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"Night.Soul\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"SpringBoot\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"JavaWeb\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"😤 Javaweb 收集\\\",\\\"image\\\":[\\\"https://img.picgo.net/2023/11/17/image-202311172347023778abf09bb52abba08.png\\\",\\\"https://img.picgo.net/2023/11/18/image-2023111800133042623d964eef949c590.png\\\"],\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"Night.Soul\\\",\\\"url\\\":\\\"https://github.com/NightSquirrl\\\"}]}\"]]},\"headers\":[{\"level\":2,\"title\":\"1. 配置\",\"slug\":\"_1-配置\",\"link\":\"#_1-配置\",\"children\":[]},{\"level\":2,\"title\":\"2. lombok\",\"slug\":\"_2-lombok\",\"link\":\"#_2-lombok\",\"children\":[{\"level\":3,\"title\":\"使用\",\"slug\":\"使用\",\"link\":\"#使用\",\"children\":[]}]},{\"level\":2,\"title\":\"2. MybatisX\",\"slug\":\"_2-mybatisx\",\"link\":\"#_2-mybatisx\",\"children\":[]}],\"readingTime\":{\"minutes\":1.1,\"words\":331},\"filePathRelative\":\"rear-end/JavaWeb/Collection.md\",\"excerpt\":\"<h2>1. 配置</h2>\\n<div class=\\\"language-properties\\\" data-ext=\\\"properties\\\" data-title=\\\"properties\\\"><pre class=\\\"language-properties\\\"><code><span class=\\\"token comment\\\">#环境变量</span>\\n<span class=\\\"token key attr-name\\\">springprofiles.active</span> <span class=\\\"token punctuation\\\">=</span> <span class=\\\"token value attr-value\\\">dev</span>\\n\\n\\n<span class=\\\"token comment\\\">#mysql</span>\\n\\n<span class=\\\"token comment\\\">#驱动类名称</span>\\n<span class=\\\"token key attr-name\\\">spring.datasource.driver-class-name</span><span class=\\\"token punctuation\\\">=</span><span class=\\\"token value attr-value\\\">com.mysql.cj.jdbc.Driver</span>\\n<span class=\\\"token comment\\\">#数据库连接的url</span>\\n<span class=\\\"token key attr-name\\\">spring.datasource.url</span><span class=\\\"token punctuation\\\">=</span><span class=\\\"token value attr-value\\\">jdbc:mysql://localhost:3306/mybatis</span>\\n<span class=\\\"token comment\\\">#连接数据库的用户名</span>\\n<span class=\\\"token key attr-name\\\">spring.datasource.username</span><span class=\\\"token punctuation\\\">=</span><span class=\\\"token value attr-value\\\">root</span>\\n<span class=\\\"token comment\\\">#连接数据库的密码</span>\\n<span class=\\\"token key attr-name\\\">spring.datasource.password</span><span class=\\\"token punctuation\\\">=</span><span class=\\\"token value attr-value\\\">1234</span>\\n\\n\\n<span class=\\\"token comment\\\">#mybatis</span>\\n\\n<span class=\\\"token comment\\\">#指定mybatis输出日志的位置, 输出控制台</span>\\n<span class=\\\"token key attr-name\\\">mybatis.configuration.log-impl</span><span class=\\\"token punctuation\\\">=</span><span class=\\\"token value attr-value\\\">org.apache.ibatis.logging.stdout.StdOutImpl</span>\\n<span class=\\\"token comment\\\"># 开启 mybatis 的驼峰命名</span>\\n<span class=\\\"token key attr-name\\\">mybatis.configuration.map-underscore-to-camel-case</span><span class=\\\"token punctuation\\\">=</span><span class=\\\"token value attr-value\\\">true</span>\\n\\n<span class=\\\"token comment\\\">#mybatis-plus</span>\\n\\n\\n\\n<span class=\\\"token comment\\\">#配置单个文件最大上传大小</span>\\n<span class=\\\"token key attr-name\\\">spring.servlet.multipart.max-file-size</span><span class=\\\"token punctuation\\\">=</span><span class=\\\"token value attr-value\\\">10MB</span>\\n<span class=\\\"token comment\\\">#配置单个请求最大上传大小(一次请求可以上传多个文件)</span>\\n<span class=\\\"token key attr-name\\\">spring.servlet.multipart.max-request-size</span><span class=\\\"token punctuation\\\">=</span><span class=\\\"token value attr-value\\\">100MB</span>\\n</code></pre></div>\",\"autoDesc\":true}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
