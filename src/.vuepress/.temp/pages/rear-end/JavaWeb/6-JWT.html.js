import comp from "/Users/zeroeldath/Desktop/ignore-space/what-tools-blog/src/.vuepress/.temp/pages/rear-end/JavaWeb/6-JWT.html.vue"
const data = JSON.parse("{\"path\":\"/rear-end/JavaWeb/6-JWT.html\",\"title\":\"😤 6.JWT-springboot\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"😤 6.JWT-springboot\",\"tag\":[\"SpringBoot\",\"JavaWeb\",\"JWT\"],\"recommend\":6,\"description\":\" 官网：https://jwt.io/ 1. JWT 1. 1 介绍 定义了一种简洁的、自包含的格式，用于在通信双方以json数据格式安全的传输信息。由于数字签名的存在，这些信息是可靠的。 JWT的组成： （JWT令牌由三个部分组成，三个部分之间使用英文的点来分割） 第一部分：Header(头）， 记录令牌类型、签名算法等。 例如： 第二部分：Payl...\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://soft-vault.com/rear-end/JavaWeb/6-JWT.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"Night.Soul\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"😤 6.JWT-springboot\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\" 官网：https://jwt.io/ 1. JWT 1. 1 介绍 定义了一种简洁的、自包含的格式，用于在通信双方以json数据格式安全的传输信息。由于数字签名的存在，这些信息是可靠的。 JWT的组成： （JWT令牌由三个部分组成，三个部分之间使用英文的点来分割） 第一部分：Header(头）， 记录令牌类型、签名算法等。 例如： 第二部分：Payl...\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:image\",\"content\":\"https://img.picgo.net/2023/11/18/image-202311181847345619c61d8746ce83a99.png\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"name\":\"twitter:card\",\"content\":\"summary_large_image\"}],[\"meta\",{\"name\":\"twitter:image:alt\",\"content\":\"😤 6.JWT-springboot\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"Night.Soul\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"SpringBoot\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"JavaWeb\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"JWT\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"😤 6.JWT-springboot\\\",\\\"image\\\":[\\\"https://img.picgo.net/2023/11/18/image-202311181847345619c61d8746ce83a99.png\\\",\\\"https://img.picgo.net/2023/11/18/image-202311181858030518b8b3b5278320bd6.png\\\",\\\"https://img.picgo.net/2023/11/18/image-20231118191823812f7fc0a12868f6739.png\\\",\\\"https://img.picgo.net/2023/11/18/image-20231118200722219c90ed48c316a8d1f.png\\\",\\\"https://img.picgo.net/2023/11/18/image-20231118200824612acc9742ef77fc4e4.png\\\"],\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"Night.Soul\\\",\\\"url\\\":\\\"https://github.com/NightSquirrl\\\"}]}\"]]},\"headers\":[{\"level\":2,\"title\":\"1. JWT\",\"slug\":\"_1-jwt\",\"link\":\"#_1-jwt\",\"children\":[{\"level\":3,\"title\":\"1. 1 介绍\",\"slug\":\"_1-1-介绍\",\"link\":\"#_1-1-介绍\",\"children\":[]},{\"level\":3,\"title\":\"1.2 使用\",\"slug\":\"_1-2-使用\",\"link\":\"#_1-2-使用\",\"children\":[]}]},{\"level\":2,\"title\":\"2. 过滤器 Filter\",\"slug\":\"_2-过滤器-filter\",\"link\":\"#_2-过滤器-filter\",\"children\":[{\"level\":3,\"title\":\"2.1 认识 Filter\",\"slug\":\"_2-1-认识-filter\",\"link\":\"#_2-1-认识-filter\",\"children\":[]},{\"level\":3,\"title\":\"2.2 定义过滤器\",\"slug\":\"_2-2-定义过滤器\",\"link\":\"#_2-2-定义过滤器\",\"children\":[]},{\"level\":3,\"title\":\"2.3  过滤器链\",\"slug\":\"_2-3-过滤器链\",\"link\":\"#_2-3-过滤器链\",\"children\":[]}]},{\"level\":2,\"title\":\"3. 拦截器Interceptor\",\"slug\":\"_3-拦截器interceptor\",\"link\":\"#_3-拦截器interceptor\",\"children\":[{\"level\":3,\"title\":\"3.1 认识拦截器\",\"slug\":\"_3-1-认识拦截器\",\"link\":\"#_3-1-认识拦截器\",\"children\":[]},{\"level\":3,\"title\":\"3.2 使用拦截器\",\"slug\":\"_3-2-使用拦截器\",\"link\":\"#_3-2-使用拦截器\",\"children\":[]},{\"level\":3,\"title\":\"3.3 Interceptor详解\",\"slug\":\"_3-3-interceptor详解\",\"link\":\"#_3-3-interceptor详解\",\"children\":[]}]},{\"level\":2,\"title\":\"4. 异常处理-全局的异常拦截\",\"slug\":\"_4-异常处理-全局的异常拦截\",\"link\":\"#_4-异常处理-全局的异常拦截\",\"children\":[]}],\"readingTime\":{\"minutes\":9.98,\"words\":2995},\"filePathRelative\":\"rear-end/JavaWeb/6-JWT.md\",\"excerpt\":\"<blockquote>\\n<p>官网：<strong>https://jwt.io/</strong></p>\\n</blockquote>\\n<h2>1. JWT</h2>\\n<h3>1. 1 介绍</h3>\\n<ul>\\n<li>定义了一种简洁的、自包含的格式，用于在通信双方以json数据格式安全的传输信息。由于数字签名的存在，这些信息是可靠的。</li>\\n</ul>\\n<p>JWT的组成： （JWT令牌由三个部分组成，三个部分之间使用英文的点来分割）</p>\\n<ul>\\n<li>\\n<p>第一部分：Header(头）， 记录令牌类型、签名算法等。 例如：</p>\\n<ul>\\n<li alg:hs256,type:jwt=\\\"\\\"></li>\\n</ul>\\n</li>\\n<li>\\n<p>第二部分：Payload(有效载荷），携带一些自定义信息、默认信息等。 例如：</p>\\n<ul>\\n<li id:1,username:tom=\\\"\\\"></li>\\n</ul>\\n</li>\\n<li>\\n<p>第三部分：Signature(签名），防止Token被篡改、确保安全性。将header、payload，并加入指定秘钥，通过指定签名算法计算而来。</p>\\n</li>\\n</ul>\",\"autoDesc\":true}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
