import comp from "/Users/zeroeldath/Desktop/ignore-space/zero-eldath/whatToolsBlog/src/.vuepress/.temp/pages/rear-end/Java/27-IOStream(OtherStreams).html.vue"
const data = JSON.parse("{\"path\":\"/rear-end/Java/27-IOStream(OtherStreams).html\",\"title\":\"😢 27.IO流（其他流）\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"😢 27.IO流（其他流）\",\"tag\":[\"Java\"],\"recommend\":28,\"description\":\"1. 缓冲流 昨天学习了基本的一些流，作为IO流的入门，今天我们要见识一些更强大的流。比如能够高效读写的缓冲流，能够转换编码的转换流，能够持久化存储对象的序列化流等等。这些功能更为强大的流，都是在基本的流对象基础之上创建而来的，就像穿上铠甲的武士一样，相当于是对基本流对象的一种增强。 1.1 概述 缓冲流,也叫高效流，是对4个基本的FileXxx 流的...\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://soft-vault.com/rear-end/Java/27-IOStream(OtherStreams).html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"Night.Soul\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"😢 27.IO流（其他流）\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"1. 缓冲流 昨天学习了基本的一些流，作为IO流的入门，今天我们要见识一些更强大的流。比如能够高效读写的缓冲流，能够转换编码的转换流，能够持久化存储对象的序列化流等等。这些功能更为强大的流，都是在基本的流对象基础之上创建而来的，就像穿上铠甲的武士一样，相当于是对基本流对象的一种增强。 1.1 概述 缓冲流,也叫高效流，是对4个基本的FileXxx 流的...\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:image\",\"content\":\"https://img.picgo.net/2023/11/06/image-202311061942127578c8b178cc491e5e6.png\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"name\":\"twitter:card\",\"content\":\"summary_large_image\"}],[\"meta\",{\"name\":\"twitter:image:alt\",\"content\":\"😢 27.IO流（其他流）\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"Night.Soul\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"Java\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"😢 27.IO流（其他流）\\\",\\\"image\\\":[\\\"https://img.picgo.net/2023/11/06/image-202311061942127578c8b178cc491e5e6.png\\\",\\\"https://img.picgo.net/2023/11/06/image-202311061942362644843aa12304046e1.png\\\",\\\"https://img.picgo.net/2023/11/06/image-202311061946295723e60241f5ec6ea7c.png\\\"],\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"Night.Soul\\\",\\\"url\\\":\\\"https://github.com/NightSquirrl\\\"}]}\"]]},\"headers\":[{\"level\":2,\"title\":\"1.1 概述\",\"slug\":\"_1-1-概述\",\"link\":\"#_1-1-概述\",\"children\":[]},{\"level\":2,\"title\":\"1.2 字节缓冲流\",\"slug\":\"_1-2-字节缓冲流\",\"link\":\"#_1-2-字节缓冲流\",\"children\":[{\"level\":3,\"title\":\"构造方法\",\"slug\":\"构造方法\",\"link\":\"#构造方法\",\"children\":[]},{\"level\":3,\"title\":\"效率测试\",\"slug\":\"效率测试\",\"link\":\"#效率测试\",\"children\":[]}]},{\"level\":2,\"title\":\"1.3 字符缓冲流\",\"slug\":\"_1-3-字符缓冲流\",\"link\":\"#_1-3-字符缓冲流\",\"children\":[{\"level\":3,\"title\":\"构造方法\",\"slug\":\"构造方法-1\",\"link\":\"#构造方法-1\",\"children\":[]},{\"level\":3,\"title\":\"特有方法\",\"slug\":\"特有方法\",\"link\":\"#特有方法\",\"children\":[]}]},{\"level\":2,\"title\":\"1.4 练习:文本排序\",\"slug\":\"_1-4-练习-文本排序\",\"link\":\"#_1-4-练习-文本排序\",\"children\":[{\"level\":3,\"title\":\"案例分析\",\"slug\":\"案例分析\",\"link\":\"#案例分析\",\"children\":[]},{\"level\":3,\"title\":\"案例实现\",\"slug\":\"案例实现\",\"link\":\"#案例实现\",\"children\":[]}]},{\"level\":2,\"title\":\"2.1 字符编码和字符集\",\"slug\":\"_2-1-字符编码和字符集\",\"link\":\"#_2-1-字符编码和字符集\",\"children\":[{\"level\":3,\"title\":\"字符编码\",\"slug\":\"字符编码\",\"link\":\"#字符编码\",\"children\":[]},{\"level\":3,\"title\":\"字符集\",\"slug\":\"字符集\",\"link\":\"#字符集\",\"children\":[]}]},{\"level\":2,\"title\":\"2.2 编码引出的问题\",\"slug\":\"_2-2-编码引出的问题\",\"link\":\"#_2-2-编码引出的问题\",\"children\":[]},{\"level\":2,\"title\":\"2.3 InputStreamReader类\",\"slug\":\"_2-3-inputstreamreader类\",\"link\":\"#_2-3-inputstreamreader类\",\"children\":[{\"level\":3,\"title\":\"构造方法\",\"slug\":\"构造方法-2\",\"link\":\"#构造方法-2\",\"children\":[]},{\"level\":3,\"title\":\"指定编码读取\",\"slug\":\"指定编码读取\",\"link\":\"#指定编码读取\",\"children\":[]}]},{\"level\":2,\"title\":\"2.4 OutputStreamWriter类\",\"slug\":\"_2-4-outputstreamwriter类\",\"link\":\"#_2-4-outputstreamwriter类\",\"children\":[{\"level\":3,\"title\":\"构造方法\",\"slug\":\"构造方法-3\",\"link\":\"#构造方法-3\",\"children\":[]},{\"level\":3,\"title\":\"指定编码写出\",\"slug\":\"指定编码写出\",\"link\":\"#指定编码写出\",\"children\":[]},{\"level\":3,\"title\":\"转换流理解图解\",\"slug\":\"转换流理解图解\",\"link\":\"#转换流理解图解\",\"children\":[]}]},{\"level\":2,\"title\":\"2.5 练习：转换文件编码\",\"slug\":\"_2-5-练习-转换文件编码\",\"link\":\"#_2-5-练习-转换文件编码\",\"children\":[{\"level\":3,\"title\":\"案例分析\",\"slug\":\"案例分析-1\",\"link\":\"#案例分析-1\",\"children\":[]},{\"level\":3,\"title\":\"案例实现\",\"slug\":\"案例实现-1\",\"link\":\"#案例实现-1\",\"children\":[]}]},{\"level\":2,\"title\":\"3.1 概述\",\"slug\":\"_3-1-概述\",\"link\":\"#_3-1-概述\",\"children\":[]},{\"level\":2,\"title\":\"3.2 ObjectOutputStream类\",\"slug\":\"_3-2-objectoutputstream类\",\"link\":\"#_3-2-objectoutputstream类\",\"children\":[{\"level\":3,\"title\":\"构造方法\",\"slug\":\"构造方法-4\",\"link\":\"#构造方法-4\",\"children\":[]},{\"level\":3,\"title\":\"序列化操作\",\"slug\":\"序列化操作\",\"link\":\"#序列化操作\",\"children\":[]}]},{\"level\":2,\"title\":\"3.3 ObjectInputStream类\",\"slug\":\"_3-3-objectinputstream类\",\"link\":\"#_3-3-objectinputstream类\",\"children\":[{\"level\":3,\"title\":\"构造方法\",\"slug\":\"构造方法-5\",\"link\":\"#构造方法-5\",\"children\":[]},{\"level\":3,\"title\":\"反序列化操作1\",\"slug\":\"反序列化操作1\",\"link\":\"#反序列化操作1\",\"children\":[]},{\"level\":3,\"title\":\"反序列化操作2\",\"slug\":\"反序列化操作2\",\"link\":\"#反序列化操作2\",\"children\":[]}]},{\"level\":2,\"title\":\"3.4 练习：序列化集合\",\"slug\":\"_3-4-练习-序列化集合\",\"link\":\"#_3-4-练习-序列化集合\",\"children\":[{\"level\":3,\"title\":\"案例分析\",\"slug\":\"案例分析-2\",\"link\":\"#案例分析-2\",\"children\":[]},{\"level\":3,\"title\":\"案例实现\",\"slug\":\"案例实现-2\",\"link\":\"#案例实现-2\",\"children\":[]}]},{\"level\":2,\"title\":\"4.1 概述\",\"slug\":\"_4-1-概述\",\"link\":\"#_4-1-概述\",\"children\":[]},{\"level\":2,\"title\":\"4.2 PrintStream类\",\"slug\":\"_4-2-printstream类\",\"link\":\"#_4-2-printstream类\",\"children\":[{\"level\":3,\"title\":\"构造方法\",\"slug\":\"构造方法-6\",\"link\":\"#构造方法-6\",\"children\":[]},{\"level\":3,\"title\":\"改变打印流向\",\"slug\":\"改变打印流向\",\"link\":\"#改变打印流向\",\"children\":[]}]}],\"readingTime\":{\"minutes\":23.67,\"words\":7101},\"filePathRelative\":\"rear-end/Java/27-IOStream(OtherStreams).md\",\"excerpt\":\"\\n<p>昨天学习了基本的一些流，作为IO流的入门，今天我们要见识一些更强大的流。比如能够高效读写的缓冲流，能够转换编码的转换流，能够持久化存储对象的序列化流等等。这些功能更为强大的流，都是在基本的流对象基础之上创建而来的，就像穿上铠甲的武士一样，相当于是对基本流对象的一种增强。</p>\\n<h2>1.1 概述</h2>\\n<p>缓冲流,也叫高效流，是对4个基本的<code>FileXxx</code> 流的增强，所以也是4个流，按照数据类型分类：</p>\\n<ul>\\n<li><strong>字节缓冲流</strong>：<code>BufferedInputStream</code>，<code>BufferedOutputStream</code></li>\\n<li><strong>字符缓冲流</strong>：<code>BufferedReader</code>，<code>BufferedWriter</code></li>\\n</ul>\",\"autoDesc\":true}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
