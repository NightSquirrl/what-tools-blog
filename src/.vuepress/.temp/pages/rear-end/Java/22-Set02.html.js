import comp from "/Users/zeroeldath/Desktop/ignore-space/whatToolsBlog/src/.vuepress/.temp/pages/rear-end/Java/22-Set02.html.vue"
const data = JSON.parse("{\"path\":\"/rear-end/Java/22-Set02.html\",\"title\":\"😢 22.集合 02\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"😢 22.集合 02\",\"tag\":[\"Java\"],\"recommend\":23,\"description\":\"1.泛型 1.1泛型概述 泛型的介绍 ​ 泛型是JDK5中引入的特性，它提供了编译时类型安全检测机制 泛型的好处 把运行时期的问题提前到了编译期间 避免了强制类型转换 泛型的定义格式 <类型>: 指定一种类型的格式.尖括号里面可以任意书写,一般只写一个字母.例如: <E> <T> <类型1,类型2…>: 指定多种类型的格式,多种类型之间用逗号隔开.例如...\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://soft-vault.com/rear-end/Java/22-Set02.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"Night.Soul\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"😢 22.集合 02\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"1.泛型 1.1泛型概述 泛型的介绍 ​ 泛型是JDK5中引入的特性，它提供了编译时类型安全检测机制 泛型的好处 把运行时期的问题提前到了编译期间 避免了强制类型转换 泛型的定义格式 <类型>: 指定一种类型的格式.尖括号里面可以任意书写,一般只写一个字母.例如: <E> <T> <类型1,类型2…>: 指定多种类型的格式,多种类型之间用逗号隔开.例如...\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:image\",\"content\":\"https://img.picgo.net/2023/11/06/image-20231106190515461520bd135382aaf30.png\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"name\":\"twitter:card\",\"content\":\"summary_large_image\"}],[\"meta\",{\"name\":\"twitter:image:alt\",\"content\":\"😢 22.集合 02\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"Night.Soul\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"Java\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"😢 22.集合 02\\\",\\\"image\\\":[\\\"https://img.picgo.net/2023/11/06/image-20231106190515461520bd135382aaf30.png\\\",\\\"https://img.picgo.net/2023/11/06/image-20231106190533943270acc8411833b33.png\\\",\\\"https://img.picgo.net/2023/11/06/image-20231106190556871f9b52333e1d04df9.png\\\",\\\"https://img.picgo.net/2023/11/06/image-20231106190624358cb389df7042b46b8.png\\\",\\\"https://img.picgo.net/2023/11/06/image-20231106190648648fe0b17671aa3bcba.png\\\",\\\"https://img.picgo.net/2023/11/06/image-20231106190705257b8c4862a41ad66fa.png\\\",\\\"https://img.picgo.net/2023/11/06/image-20231106190736772c179377cf6a8c47c.png\\\",\\\"https://img.picgo.net/2023/11/06/image-20231106190748329914346325bf8a4e5.png\\\",\\\"https://img.picgo.net/2023/11/06/image-2023110619080981224fcf04e2c6caeae.png\\\",\\\"https://img.picgo.net/2023/11/06/image-2023110619083392702036261c7578399.png\\\",\\\"https://img.picgo.net/2023/11/06/image-202311061908553403449affd08258f6f.png\\\",\\\"https://img.picgo.net/2023/11/06/image-20231106190915161a37989f31d23848c.png\\\",\\\"https://img.picgo.net/2023/11/06/image-20231106190954730447bd7965fd3d55e.png\\\"],\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"Night.Soul\\\",\\\"url\\\":\\\"https://github.com/NightSquirrl\\\"}]}\"]]},\"headers\":[{\"level\":2,\"title\":\"1.泛型\",\"slug\":\"_1-泛型\",\"link\":\"#_1-泛型\",\"children\":[{\"level\":3,\"title\":\"1.1泛型概述\",\"slug\":\"_1-1泛型概述\",\"link\":\"#_1-1泛型概述\",\"children\":[]}]},{\"level\":2,\"title\":\"2.Set集合\",\"slug\":\"_2-set集合\",\"link\":\"#_2-set集合\",\"children\":[{\"level\":3,\"title\":\"2.1Set集合概述和特点【应用】\",\"slug\":\"_2-1set集合概述和特点【应用】\",\"link\":\"#_2-1set集合概述和特点【应用】\",\"children\":[]},{\"level\":3,\"title\":\"2.2Set集合的使用【应用】\",\"slug\":\"_2-2set集合的使用【应用】\",\"link\":\"#_2-2set集合的使用【应用】\",\"children\":[]}]},{\"level\":2,\"title\":\"3.TreeSet集合\",\"slug\":\"_3-treeset集合\",\"link\":\"#_3-treeset集合\",\"children\":[{\"level\":3,\"title\":\"3.1TreeSet集合概述和特点【应用】\",\"slug\":\"_3-1treeset集合概述和特点【应用】\",\"link\":\"#_3-1treeset集合概述和特点【应用】\",\"children\":[]},{\"level\":3,\"title\":\"3.2TreeSet集合基本使用【应用】\",\"slug\":\"_3-2treeset集合基本使用【应用】\",\"link\":\"#_3-2treeset集合基本使用【应用】\",\"children\":[]},{\"level\":3,\"title\":\"3.3自然排序Comparable的使用【应用】\",\"slug\":\"_3-3自然排序comparable的使用【应用】\",\"link\":\"#_3-3自然排序comparable的使用【应用】\",\"children\":[]},{\"level\":3,\"title\":\"3.4比较器排序Comparator的使用【应用】\",\"slug\":\"_3-4比较器排序comparator的使用【应用】\",\"link\":\"#_3-4比较器排序comparator的使用【应用】\",\"children\":[]},{\"level\":3,\"title\":\"3.5两种比较方式总结【理解】\",\"slug\":\"_3-5两种比较方式总结【理解】\",\"link\":\"#_3-5两种比较方式总结【理解】\",\"children\":[]}]},{\"level\":2,\"title\":\"4.数据结构\",\"slug\":\"_4-数据结构\",\"link\":\"#_4-数据结构\",\"children\":[{\"level\":3,\"title\":\"4.1二叉树【理解】\",\"slug\":\"_4-1二叉树【理解】\",\"link\":\"#_4-1二叉树【理解】\",\"children\":[]},{\"level\":3,\"title\":\"4.2二叉查找树【理解】\",\"slug\":\"_4-2二叉查找树【理解】\",\"link\":\"#_4-2二叉查找树【理解】\",\"children\":[]},{\"level\":3,\"title\":\"4.3平衡二叉树【理解】\",\"slug\":\"_4-3平衡二叉树【理解】\",\"link\":\"#_4-3平衡二叉树【理解】\",\"children\":[]},{\"level\":3,\"title\":\"4.3红黑树【理解】\",\"slug\":\"_4-3红黑树【理解】\",\"link\":\"#_4-3红黑树【理解】\",\"children\":[]}]},{\"level\":2,\"title\":\"5.HashSet集合\",\"slug\":\"_5-hashset集合\",\"link\":\"#_5-hashset集合\",\"children\":[{\"level\":3,\"title\":\"5.1HashSet集合概述和特点【应用】\",\"slug\":\"_5-1hashset集合概述和特点【应用】\",\"link\":\"#_5-1hashset集合概述和特点【应用】\",\"children\":[]},{\"level\":3,\"title\":\"5.2HashSet集合的基本应用【应用】\",\"slug\":\"_5-2hashset集合的基本应用【应用】\",\"link\":\"#_5-2hashset集合的基本应用【应用】\",\"children\":[]},{\"level\":3,\"title\":\"5.3哈希值【理解】\",\"slug\":\"_5-3哈希值【理解】\",\"link\":\"#_5-3哈希值【理解】\",\"children\":[]},{\"level\":3,\"title\":\"5.4哈希表结构【理解】\",\"slug\":\"_5-4哈希表结构【理解】\",\"link\":\"#_5-4哈希表结构【理解】\",\"children\":[]},{\"level\":3,\"title\":\"5.5HashSet集合存储学生对象并遍历【应用】\",\"slug\":\"_5-5hashset集合存储学生对象并遍历【应用】\",\"link\":\"#_5-5hashset集合存储学生对象并遍历【应用】\",\"children\":[]}]}],\"readingTime\":{\"minutes\":10.49,\"words\":3148},\"filePathRelative\":\"rear-end/Java/22-Set02.md\",\"excerpt\":\"<h2>1.泛型</h2>\\n<h3>1.1泛型概述</h3>\\n<ul>\\n<li>\\n<p>泛型的介绍</p>\\n<p>​\\t泛型是JDK5中引入的特性，它提供了编译时类型安全检测机制</p>\\n</li>\\n<li>\\n<p>泛型的好处</p>\\n<ol>\\n<li>把运行时期的问题提前到了编译期间</li>\\n<li>避免了强制类型转换</li>\\n</ol>\\n</li>\\n<li>\\n<p>泛型的定义格式</p>\\n<ul>\\n<li><code>&lt;类型&gt;: 指定一种类型的格式.尖括号里面可以任意书写,一般只写一个字母.例如: &lt;E&gt; &lt;T&gt;</code></li>\\n<li><code>&lt;类型1,类型2…&gt;: 指定多种类型的格式,多种类型之间用逗号隔开.例如: &lt;E,T&gt; &lt;K,V&gt;</code></li>\\n</ul>\\n</li>\\n</ul>\",\"autoDesc\":true}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
