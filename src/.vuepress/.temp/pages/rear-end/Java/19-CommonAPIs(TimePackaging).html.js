import comp from "/Users/zeroeldath/Desktop/ignore-space/whatToolsBlog/src/.vuepress/.temp/pages/rear-end/Java/19-CommonAPIs(TimePackaging).html.vue"
const data = JSON.parse("{\"path\":\"/rear-end/Java/19-CommonAPIs(TimePackaging).html\",\"title\":\"😢 19.常用 API(时间 包装类)\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"😢 19.常用 API(时间 包装类)\",\"tag\":[\"Java\"],\"recommend\":20,\"description\":\"第一章 Date类 1.1 Date概述 java.util.Date`类 表示特定的瞬间，精确到毫秒。 继续查阅Date类的描述，发现Date拥有多个构造函数，只是部分已经过时，我们重点看以下两个构造函数 public Date()：从运行程序的此时此刻到时间原点经历的毫秒值,转换成Date对象，分配Date对象并初始化此对象，以表示分配它的时间（精...\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://soft-vault.com/rear-end/Java/19-CommonAPIs(TimePackaging).html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"Night.Soul\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"😢 19.常用 API(时间 包装类)\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"第一章 Date类 1.1 Date概述 java.util.Date`类 表示特定的瞬间，精确到毫秒。 继续查阅Date类的描述，发现Date拥有多个构造函数，只是部分已经过时，我们重点看以下两个构造函数 public Date()：从运行程序的此时此刻到时间原点经历的毫秒值,转换成Date对象，分配Date对象并初始化此对象，以表示分配它的时间（精...\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"Night.Soul\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"Java\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"😢 19.常用 API(时间 包装类)\\\",\\\"image\\\":[\\\"\\\"],\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"Night.Soul\\\",\\\"url\\\":\\\"https://github.com/NightSquirrl\\\"}]}\"]]},\"headers\":[{\"level\":2,\"title\":\"1.1 Date概述\",\"slug\":\"_1-1-date概述\",\"link\":\"#_1-1-date概述\",\"children\":[]},{\"level\":2,\"title\":\"1.2 Date常用方法\",\"slug\":\"_1-2-date常用方法\",\"link\":\"#_1-2-date常用方法\",\"children\":[]},{\"level\":2,\"title\":\"2.1 构造方法\",\"slug\":\"_2-1-构造方法\",\"link\":\"#_2-1-构造方法\",\"children\":[]},{\"level\":2,\"title\":\"2.2 格式规则\",\"slug\":\"_2-2-格式规则\",\"link\":\"#_2-2-格式规则\",\"children\":[]},{\"level\":2,\"title\":\"2.3 常用方法\",\"slug\":\"_2-3-常用方法\",\"link\":\"#_2-3-常用方法\",\"children\":[]},{\"level\":2,\"title\":\"2.4 练习1(初恋女友的出生日期)\",\"slug\":\"_2-4-练习1-初恋女友的出生日期\",\"link\":\"#_2-4-练习1-初恋女友的出生日期\",\"children\":[]},{\"level\":2,\"title\":\"2.5 练习2(秒杀活动)\",\"slug\":\"_2-5-练习2-秒杀活动\",\"link\":\"#_2-5-练习2-秒杀活动\",\"children\":[]},{\"level\":2,\"title\":\"3.1 概述\",\"slug\":\"_3-1-概述\",\"link\":\"#_3-1-概述\",\"children\":[]},{\"level\":2,\"title\":\"3.2 常用方法\",\"slug\":\"_3-2-常用方法\",\"link\":\"#_3-2-常用方法\",\"children\":[]},{\"level\":2,\"title\":\"3.3 get方法示例\",\"slug\":\"_3-3-get方法示例\",\"link\":\"#_3-3-get方法示例\",\"children\":[]},{\"level\":2,\"title\":\"3.4 set方法示例：\",\"slug\":\"_3-4-set方法示例\",\"link\":\"#_3-4-set方法示例\",\"children\":[]},{\"level\":2,\"title\":\"3.5 add方法示例：\",\"slug\":\"_3-5-add方法示例\",\"link\":\"#_3-5-add方法示例\",\"children\":[]},{\"level\":2,\"title\":\"4.1  ZoneId 时区\",\"slug\":\"_4-1-zoneid-时区\",\"link\":\"#_4-1-zoneid-时区\",\"children\":[]},{\"level\":2,\"title\":\"4.2  Instant 时间戳\",\"slug\":\"_4-2-instant-时间戳\",\"link\":\"#_4-2-instant-时间戳\",\"children\":[]},{\"level\":2,\"title\":\"4.3 ZoneDateTime  带时区的时间\",\"slug\":\"_4-3-zonedatetime-带时区的时间\",\"link\":\"#_4-3-zonedatetime-带时区的时间\",\"children\":[]},{\"level\":2,\"title\":\"4.4DateTimeFormatter   用于时间的格式化和解析\",\"slug\":\"_4-4datetimeformatter-用于时间的格式化和解析\",\"link\":\"#_4-4datetimeformatter-用于时间的格式化和解析\",\"children\":[]},{\"level\":2,\"title\":\"4.5LocalDate  年、月、日\",\"slug\":\"_4-5localdate-年、月、日\",\"link\":\"#_4-5localdate-年、月、日\",\"children\":[]},{\"level\":2,\"title\":\"4.6 LocalTime  时、分、秒\",\"slug\":\"_4-6-localtime-时、分、秒\",\"link\":\"#_4-6-localtime-时、分、秒\",\"children\":[]},{\"level\":2,\"title\":\"4.7 LocalDateTime  年、月、日、时、分、秒\",\"slug\":\"_4-7-localdatetime-年、月、日、时、分、秒\",\"link\":\"#_4-7-localdatetime-年、月、日、时、分、秒\",\"children\":[]},{\"level\":2,\"title\":\"4.8 Duration  时间间隔（秒，纳，秒）\",\"slug\":\"_4-8-duration-时间间隔-秒-纳-秒\",\"link\":\"#_4-8-duration-时间间隔-秒-纳-秒\",\"children\":[]},{\"level\":2,\"title\":\"4.9 Period  时间间隔（年，月，日）\",\"slug\":\"_4-9-period-时间间隔-年-月-日\",\"link\":\"#_4-9-period-时间间隔-年-月-日\",\"children\":[]},{\"level\":2,\"title\":\"4.10 ChronoUnit  时间间隔（所有单位）\",\"slug\":\"_4-10-chronounit-时间间隔-所有单位\",\"link\":\"#_4-10-chronounit-时间间隔-所有单位\",\"children\":[]},{\"level\":2,\"title\":\"5.1 概述\",\"slug\":\"_5-1-概述\",\"link\":\"#_5-1-概述\",\"children\":[]},{\"level\":2,\"title\":\"5.2 Integer类\",\"slug\":\"_5-2-integer类\",\"link\":\"#_5-2-integer类\",\"children\":[]},{\"level\":2,\"title\":\"5.3 装箱与拆箱\",\"slug\":\"_5-3-装箱与拆箱\",\"link\":\"#_5-3-装箱与拆箱\",\"children\":[]},{\"level\":2,\"title\":\"5.4 自动装箱与自动拆箱\",\"slug\":\"_5-4-自动装箱与自动拆箱\",\"link\":\"#_5-4-自动装箱与自动拆箱\",\"children\":[]},{\"level\":2,\"title\":\"5.5 基本类型与字符串之间的转换\",\"slug\":\"_5-5-基本类型与字符串之间的转换\",\"link\":\"#_5-5-基本类型与字符串之间的转换\",\"children\":[{\"level\":3,\"title\":\"基本类型转换为String\",\"slug\":\"基本类型转换为string\",\"link\":\"#基本类型转换为string\",\"children\":[]},{\"level\":3,\"title\":\"String转换成基本类型\",\"slug\":\"string转换成基本类型\",\"link\":\"#string转换成基本类型\",\"children\":[]}]},{\"level\":2,\"title\":\"5.6 底层原理\",\"slug\":\"_5-6-底层原理\",\"link\":\"#_5-6-底层原理\",\"children\":[]},{\"level\":2,\"title\":\"练习一：\",\"slug\":\"练习一\",\"link\":\"#练习一\",\"children\":[]},{\"level\":2,\"title\":\"练习二：\",\"slug\":\"练习二\",\"link\":\"#练习二\",\"children\":[]},{\"level\":2,\"title\":\"练习三：\",\"slug\":\"练习三\",\"link\":\"#练习三\",\"children\":[]},{\"level\":2,\"title\":\"练习四：\",\"slug\":\"练习四\",\"link\":\"#练习四\",\"children\":[]},{\"level\":2,\"title\":\"练习五：\",\"slug\":\"练习五\",\"link\":\"#练习五\",\"children\":[]}],\"readingTime\":{\"minutes\":23.29,\"words\":6987},\"filePathRelative\":\"rear-end/Java/19-CommonAPIs(TimePackaging).md\",\"excerpt\":\"\\n<h2>1.1 Date概述</h2>\\n<p>java.util.Date`类 表示特定的瞬间，精确到毫秒。</p>\\n<p>继续查阅Date类的描述，发现Date拥有多个构造函数，只是部分已经过时，我们重点看以下两个构造函数</p>\\n<ul>\\n<li><code>public Date()</code>：从运行程序的此时此刻到时间原点经历的毫秒值,转换成Date对象，分配Date对象并初始化此对象，以表示分配它的时间（精确到毫秒）。</li>\\n<li><code>public Date(long date)</code>：将指定参数的毫秒值date,转换成Date对象，分配Date对象并初始化此对象，以表示自从标准基准时间（称为“历元（epoch）”，即1970年1月1日00:00:00 GMT）以来的指定毫秒数。</li>\\n</ul>\",\"autoDesc\":true}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
