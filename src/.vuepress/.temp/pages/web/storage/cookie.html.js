import comp from "/Users/zeroeldath/Desktop/ignore-space/zero-eldath/whatToolsBlog/src/.vuepress/.temp/pages/web/storage/cookie.html.vue"
const data = JSON.parse("{\"path\":\"/web/storage/cookie.html\",\"title\":\"Cookie\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"Cookie\",\"tag\":[\"storage\"],\"star\":true,\"description\":\"Cookie Cookie 说白了就是一个存储在浏览器里的一个小小的文本文件，它附着在 HTTP 请求上，在浏览器和服务器之间“飞来飞去”。它可以携带用户信息，当服务器检查 Cookie 的时候，便可以获取到客户端的状态。 缺点： 4KB 过量的 Cookie 会带来巨大的性能浪费 Cookie 是紧跟域名的 Cookie 是明文传递的，容易泄露用户信...\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://soft-vault.com/web/storage/cookie.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"Night.Soul\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"Cookie\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"Cookie Cookie 说白了就是一个存储在浏览器里的一个小小的文本文件，它附着在 HTTP 请求上，在浏览器和服务器之间“飞来飞去”。它可以携带用户信息，当服务器检查 Cookie 的时候，便可以获取到客户端的状态。 缺点： 4KB 过量的 Cookie 会带来巨大的性能浪费 Cookie 是紧跟域名的 Cookie 是明文传递的，容易泄露用户信...\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"Night.Soul\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"storage\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"Cookie\\\",\\\"image\\\":[\\\"\\\"],\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"Night.Soul\\\",\\\"url\\\":\\\"https://github.com/NightSquirrl\\\"}]}\"]]},\"headers\":[{\"level\":2,\"title\":\"Cookie\",\"slug\":\"cookie\",\"link\":\"#cookie\",\"children\":[{\"level\":3,\"title\":\"缺点：\",\"slug\":\"缺点\",\"link\":\"#缺点\",\"children\":[]},{\"level\":3,\"title\":\"使用\",\"slug\":\"使用\",\"link\":\"#使用\",\"children\":[]},{\"level\":3,\"title\":\"携带到后端原理\",\"slug\":\"携带到后端原理\",\"link\":\"#携带到后端原理\",\"children\":[]}]}],\"readingTime\":{\"minutes\":1.55,\"words\":465},\"filePathRelative\":\"web/storage/cookie.md\",\"excerpt\":\"<h2>Cookie</h2>\\n<p>Cookie 说白了就是一个存储在浏览器里的一个小小的文本文件，它附着在 HTTP 请求上，在浏览器和服务器之间“飞来飞去”。它可以携带用户信息，当服务器检查 Cookie 的时候，便可以获取到客户端的状态。</p>\\n<h3>缺点：</h3>\\n<ul>\\n<li>4KB</li>\\n<li>过量的 Cookie 会带来巨大的性能浪费</li>\\n<li>Cookie 是紧跟域名的</li>\\n<li>Cookie 是明文传递的，容易泄露用户信息，安全性不高。</li>\\n</ul>\\n<h3>使用</h3>\\n<ol>\\n<li>\\n<p>设置 Cookie：</p>\\n<div class=\\\"language-javascript\\\" data-ext=\\\"js\\\" data-title=\\\"js\\\"><pre class=\\\"language-javascript\\\"><code>document<span class=\\\"token punctuation\\\">.</span>cookie <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"cookieName=cookieValue; expires=Thu, 31 Dec 2024 23:59:59 UTC; path=/\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre></div><p>在上面的示例中，<code>cookieName</code> 是你要设置的 Cookie 的名称，<code>cookieValue</code> 是对应的值。<code>expires</code> 参数指定了 Cookie 的过期时间，这里设置为 2024 年 12 月 31 日。<code>path</code> 参数指定了 Cookie 的适用路径，这里设置为根路径 <code>/</code>。</p>\\n</li>\\n<li>\\n<p>获取 Cookie：</p>\\n<div class=\\\"language-javascript\\\" data-ext=\\\"js\\\" data-title=\\\"js\\\"><pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">const</span> cookieValue <span class=\\\"token operator\\\">=</span> document<span class=\\\"token punctuation\\\">.</span>cookie<span class=\\\"token punctuation\\\">;</span>\\n</code></pre></div><p>使用 <code>document.cookie</code> 可以获取当前页面的所有 Cookie。它返回一个字符串，包含了所有的 Cookie。</p>\\n</li>\\n<li>\\n<p>解析 Cookie：</p>\\n<div class=\\\"language-javascript\\\" data-ext=\\\"js\\\" data-title=\\\"js\\\"><pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">parseCookie</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">cookieString</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> cookies <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n  cookieString<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">split</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">';'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">forEach</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">cookie</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>name<span class=\\\"token punctuation\\\">,</span> value<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> cookie<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">split</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'='</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> cookieName <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">decodeURIComponent</span><span class=\\\"token punctuation\\\">(</span>name<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">trim</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">const</span> cookieValue <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">decodeURIComponent</span><span class=\\\"token punctuation\\\">(</span>value<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">trim</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    cookies<span class=\\\"token punctuation\\\">[</span>cookieName<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> cookieValue<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> cookies<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">const</span> parsedCookies <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">parseCookie</span><span class=\\\"token punctuation\\\">(</span>document<span class=\\\"token punctuation\\\">.</span>cookie<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre></div><p>上面的代码定义了一个 <code>parseCookie</code> 函数，它将 <code>document.cookie</code> 字符串解析为一个对象，其中 Cookie 的名称作为键，Cookie 的值作为对应的值。这样你就可以方便地通过 Cookie 名称访问其对应的值。</p>\\n</li>\\n<li>\\n<p>删除 Cookie：</p>\\n<div class=\\\"language-javascript\\\" data-ext=\\\"js\\\" data-title=\\\"js\\\"><pre class=\\\"language-javascript\\\"><code>document<span class=\\\"token punctuation\\\">.</span>cookie <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"cookieName=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre></div><p>要删除一个 Cookie，你可以将其过期时间设置为过去的时间（比如 1970 年 1 月 1 日），这样浏览器会自动删除该 Cookie。</p>\\n</li>\\n</ol>\",\"autoDesc\":true}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
