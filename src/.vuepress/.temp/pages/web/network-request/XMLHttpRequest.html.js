import comp from "/Users/zeroeldath/Desktop/ignore-space/what-tools-blog/src/.vuepress/.temp/pages/web/network-request/XMLHttpRequest.html.vue"
const data = JSON.parse("{\"path\":\"/web/network-request/XMLHttpRequest.html\",\"title\":\"😤 XHR使用教程\",\"lang\":\"zh-CN\",\"frontmatter\":{\"description\":\"XHR 相关的 API\",\"title\":\"😤 XHR使用教程\",\"tag\":[\"AJAX\",\"XHR\",\"前端\"],\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://soft-vault.com/web/network-request/XMLHttpRequest.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"Night.Soul\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"😤 XHR使用教程\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"XHR 相关的 API\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"Night.Soul\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"AJAX\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"XHR\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"前端\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"😤 XHR使用教程\\\",\\\"image\\\":[\\\"\\\"],\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"Night.Soul\\\",\\\"url\\\":\\\"https://github.com/NightSquirrl\\\"}]}\"]]},\"headers\":[{\"level\":3,\"title\":\"1.XMLHttpRequest的意义和概念\",\"slug\":\"_1-xmlhttprequest的意义和概念\",\"link\":\"#_1-xmlhttprequest的意义和概念\",\"children\":[]},{\"level\":3,\"title\":\"2.属性\",\"slug\":\"_2-属性\",\"link\":\"#_2-属性\",\"children\":[]},{\"level\":3,\"title\":\"3.实例方法\",\"slug\":\"_3-实例方法\",\"link\":\"#_3-实例方法\",\"children\":[]},{\"level\":3,\"title\":\"3.使用XMLHttpRequest的方法\",\"slug\":\"_3-使用xmlhttprequest的方法\",\"link\":\"#_3-使用xmlhttprequest的方法\",\"children\":[]}],\"readingTime\":{\"minutes\":3.63,\"words\":1090},\"filePathRelative\":\"web/network-request/XMLHttpRequest.md\",\"excerpt\":\"<h3>1.XMLHttpRequest的意义和概念</h3>\\n<p>XMLHttpRequest是一个特殊的对象，其目的是作用于服务器交换数据</p>\\n<h4>主要功能：</h4>\\n<pre><code>它可以使网页在不重新加载的情况下更新网页\\n\\n在页面加载后向服务器发送请求\\n\\n在页面加载后从服务器接收数据\\n\\n在后台向服务器发送数据\\n</code></pre>\\n<h3>2.属性</h3>\\n<ul>\\n<li>\\n<p>readystate(只读):</p>\\n<p>返回一个无符号短整型数字，代表请求的状态码</p>\\n<p>0：表示XMLHttprequest实例已经生成，但是实例的open方法没有被调用</p>\\n<p>1：表示open方法已经调用，可以使用实例的setRequestHeader()方法设置HTTP请求头信息。此时send方法还没调用</p>\\n<p>2：表示实例的send方法已经调用，并且服务器返回的头信息和状态码已经收到</p>\\n<p>3：表示正在接收服务器传来的数据体body部分。这时，如果实例的responseType属性等于text或者空字符串，responseText属性就会包含已经收到的部分信息</p>\\n<p>4：表示服务器返回的数据已经完全接收，或本次接收已经失败</p>\\n</li>\\n<li>\\n<p>onreadystatechange:</p>\\n<p>当<strong>readystate</strong>属性发生变化时，调用的事件处理器</p>\\n<ul>\\n<li>\\n<p>responseType:</p>\\n<p>一个定义响应类型的枚举类</p>\\n</li>\\n<li>\\n<p>response(只读):</p>\\n<p>返回根据<strong>responseType</strong>的的值来返回对应类型的响应实体</p>\\n</li>\\n<li>\\n<p>status(只读):</p>\\n<p>返回一个无符号的短整型数字，代表请求的响应状态</p>\\n</li>\\n<li>\\n<p>timeout:</p>\\n<p>一个无符号长整型数字，代表当前请求的最大请求时间，超出该事件，请求会自动终止</p>\\n</li>\\n</ul>\\n</li>\\n</ul>\"}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
