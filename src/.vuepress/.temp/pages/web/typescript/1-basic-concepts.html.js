import comp from "/Users/zeroeldath/Desktop/ignore-space/zero-eldath/whatToolsBlog/src/.vuepress/.temp/pages/web/typescript/1-basic-concepts.html.vue"
const data = JSON.parse("{\"path\":\"/web/typescript/1-basic-concepts.html\",\"title\":\"1. 基础概念\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"1. 基础概念\",\"tag\":[\"TypeScript\"],\"top\":1,\"recommend\":1,\"description\":\"基础类型 Boolean 类型 Number 类型 String 类型 Symbol 类型 Array 类型 💡Enum 类型 数字枚举-常用 字符串枚举-常用 特殊 异构枚举 混合罢了 💡Any 类型 在类型报错的地方,或者临时不想指定类型的时候可以暂时使用 any,规范的 ts 项目,最好为每一个类型指定 Unknown 类型 就像所有类型都可...\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://soft-vault.com/web/typescript/1-basic-concepts.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"Night.Soul\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"1. 基础概念\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"基础类型 Boolean 类型 Number 类型 String 类型 Symbol 类型 Array 类型 💡Enum 类型 数字枚举-常用 字符串枚举-常用 特殊 异构枚举 混合罢了 💡Any 类型 在类型报错的地方,或者临时不想指定类型的时候可以暂时使用 any,规范的 ts 项目,最好为每一个类型指定 Unknown 类型 就像所有类型都可...\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:image\",\"content\":\"https://www.z4a.net/images/2024/06/10/image.png\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"name\":\"twitter:card\",\"content\":\"summary_large_image\"}],[\"meta\",{\"name\":\"twitter:image:alt\",\"content\":\"1. 基础概念\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"Night.Soul\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"TypeScript\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"1. 基础概念\\\",\\\"image\\\":[\\\"https://www.z4a.net/images/2024/06/10/image.png\\\",\\\"https://www.z4a.net/images/2024/06/10/imagea51c66c2771cdfd7.png\\\"],\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"Night.Soul\\\",\\\"url\\\":\\\"https://github.com/NightSquirrl\\\"}]}\"]]},\"headers\":[{\"level\":2,\"title\":\"基础类型\",\"slug\":\"基础类型\",\"link\":\"#基础类型\",\"children\":[{\"level\":3,\"title\":\"Boolean 类型\",\"slug\":\"boolean-类型\",\"link\":\"#boolean-类型\",\"children\":[]},{\"level\":3,\"title\":\"Number 类型\",\"slug\":\"number-类型\",\"link\":\"#number-类型\",\"children\":[]},{\"level\":3,\"title\":\"String 类型\",\"slug\":\"string-类型\",\"link\":\"#string-类型\",\"children\":[]},{\"level\":3,\"title\":\"Symbol 类型\",\"slug\":\"symbol-类型\",\"link\":\"#symbol-类型\",\"children\":[]},{\"level\":3,\"title\":\"Array 类型\",\"slug\":\"array-类型\",\"link\":\"#array-类型\",\"children\":[]},{\"level\":3,\"title\":\"💡Enum 类型\",\"slug\":\"💡enum-类型\",\"link\":\"#💡enum-类型\",\"children\":[]},{\"level\":3,\"title\":\"💡Any 类型\",\"slug\":\"💡any-类型\",\"link\":\"#💡any-类型\",\"children\":[]},{\"level\":3,\"title\":\"Unknown 类型\",\"slug\":\"unknown-类型\",\"link\":\"#unknown-类型\",\"children\":[]},{\"level\":3,\"title\":\"Tuple 类型\",\"slug\":\"tuple-类型\",\"link\":\"#tuple-类型\",\"children\":[]},{\"level\":3,\"title\":\"Void 类型\",\"slug\":\"void-类型\",\"link\":\"#void-类型\",\"children\":[]},{\"level\":3,\"title\":\"Null 和 Undefined 类型\",\"slug\":\"null-和-undefined-类型\",\"link\":\"#null-和-undefined-类型\",\"children\":[]},{\"level\":3,\"title\":\"object, Object 和 {} 类型\",\"slug\":\"object-object-和-类型\",\"link\":\"#object-object-和-类型\",\"children\":[]},{\"level\":3,\"title\":\"Never 类型\",\"slug\":\"never-类型\",\"link\":\"#never-类型\",\"children\":[]}]},{\"level\":2,\"title\":\"typescript 断言\",\"slug\":\"typescript-断言\",\"link\":\"#typescript-断言\",\"children\":[]},{\"level\":2,\"title\":\"类型守卫\",\"slug\":\"类型守卫\",\"link\":\"#类型守卫\",\"children\":[{\"level\":3,\"title\":\"in 关键字\",\"slug\":\"in-关键字\",\"link\":\"#in-关键字\",\"children\":[]},{\"level\":3,\"title\":\"typeof 关键字\",\"slug\":\"typeof-关键字\",\"link\":\"#typeof-关键字\",\"children\":[]},{\"level\":3,\"title\":\"instanceof 关键字\",\"slug\":\"instanceof-关键字\",\"link\":\"#instanceof-关键字\",\"children\":[]},{\"level\":3,\"title\":\"自定义类型保护的类型谓词\",\"slug\":\"自定义类型保护的类型谓词\",\"link\":\"#自定义类型保护的类型谓词\",\"children\":[]}]},{\"level\":2,\"title\":\"联合类型和类型别名\",\"slug\":\"联合类型和类型别名\",\"link\":\"#联合类型和类型别名\",\"children\":[{\"level\":3,\"title\":\"联合类型\",\"slug\":\"联合类型\",\"link\":\"#联合类型\",\"children\":[]},{\"level\":3,\"title\":\"类型别名\",\"slug\":\"类型别名\",\"link\":\"#类型别名\",\"children\":[]}]},{\"level\":2,\"title\":\"交叉类型\",\"slug\":\"交叉类型\",\"link\":\"#交叉类型\",\"children\":[{\"level\":3,\"title\":\"同名基础类型属性的合并\",\"slug\":\"同名基础类型属性的合并\",\"link\":\"#同名基础类型属性的合并\",\"children\":[]},{\"level\":3,\"title\":\"同名非基础类型属性的合并\",\"slug\":\"同名非基础类型属性的合并\",\"link\":\"#同名非基础类型属性的合并\",\"children\":[]}]},{\"level\":2,\"title\":\"typescript 函数\",\"slug\":\"typescript-函数\",\"link\":\"#typescript-函数\",\"children\":[{\"level\":3,\"title\":\"💡可选参数及默认参数\",\"slug\":\"💡可选参数及默认参数\",\"link\":\"#💡可选参数及默认参数\",\"children\":[]},{\"level\":3,\"title\":\"💡剩余参数\",\"slug\":\"💡剩余参数\",\"link\":\"#💡剩余参数\",\"children\":[]},{\"level\":3,\"title\":\"函数重载\",\"slug\":\"函数重载\",\"link\":\"#函数重载\",\"children\":[]}]},{\"level\":2,\"title\":\"💡typescript 接口\",\"slug\":\"💡typescript-接口\",\"link\":\"#💡typescript-接口\",\"children\":[{\"level\":3,\"title\":\"对象的形状\",\"slug\":\"对象的形状\",\"link\":\"#对象的形状\",\"children\":[]},{\"level\":3,\"title\":\"💡可选 | 只读属性\",\"slug\":\"💡可选-只读属性\",\"link\":\"#💡可选-只读属性\",\"children\":[]},{\"level\":3,\"title\":\"💡任意属性\",\"slug\":\"💡任意属性\",\"link\":\"#💡任意属性\",\"children\":[]},{\"level\":3,\"title\":\"接口与类型别名的区别\",\"slug\":\"接口与类型别名的区别\",\"link\":\"#接口与类型别名的区别\",\"children\":[]}]},{\"level\":2,\"title\":\"💡typescript 类\",\"slug\":\"💡typescript-类\",\"link\":\"#💡typescript-类\",\"children\":[{\"level\":3,\"title\":\"getter 和 setter\",\"slug\":\"getter-和-setter\",\"link\":\"#getter-和-setter\",\"children\":[]},{\"level\":3,\"title\":\"类的继承\",\"slug\":\"类的继承\",\"link\":\"#类的继承\",\"children\":[]},{\"level\":3,\"title\":\"抽象类\",\"slug\":\"抽象类\",\"link\":\"#抽象类\",\"children\":[]}]},{\"level\":2,\"title\":\"💡typescript 泛型\",\"slug\":\"💡typescript-泛型\",\"link\":\"#💡typescript-泛型\",\"children\":[{\"level\":3,\"title\":\"泛型语法\",\"slug\":\"泛型语法\",\"link\":\"#泛型语法\",\"children\":[]},{\"level\":3,\"title\":\"泛型接口\",\"slug\":\"泛型接口\",\"link\":\"#泛型接口\",\"children\":[]},{\"level\":3,\"title\":\"泛型类\",\"slug\":\"泛型类\",\"link\":\"#泛型类\",\"children\":[]},{\"level\":3,\"title\":\"泛型工具类型\",\"slug\":\"泛型工具类型\",\"link\":\"#泛型工具类型\",\"children\":[]}]},{\"level\":2,\"title\":\"🤯装饰器\",\"slug\":\"🤯装饰器\",\"link\":\"#🤯装饰器\",\"children\":[{\"level\":3,\"title\":\"装饰器是什么\",\"slug\":\"装饰器是什么\",\"link\":\"#装饰器是什么\",\"children\":[]},{\"level\":3,\"title\":\"装饰器的分类\",\"slug\":\"装饰器的分类\",\"link\":\"#装饰器的分类\",\"children\":[]},{\"level\":3,\"title\":\"类装饰器\",\"slug\":\"类装饰器\",\"link\":\"#类装饰器\",\"children\":[]},{\"level\":3,\"title\":\"属性装饰器\",\"slug\":\"属性装饰器\",\"link\":\"#属性装饰器\",\"children\":[]},{\"level\":3,\"title\":\"方法装饰器\",\"slug\":\"方法装饰器\",\"link\":\"#方法装饰器\",\"children\":[]},{\"level\":3,\"title\":\"参数装饰器\",\"slug\":\"参数装饰器\",\"link\":\"#参数装饰器\",\"children\":[]}]},{\"level\":2,\"title\":\"💡编译上下文\",\"slug\":\"💡编译上下文\",\"link\":\"#💡编译上下文\",\"children\":[{\"level\":3,\"title\":\"tsconfig.json 的作用\",\"slug\":\"tsconfig-json-的作用\",\"link\":\"#tsconfig-json-的作用\",\"children\":[]},{\"level\":3,\"title\":\"tsconfig.json 重要字段\",\"slug\":\"tsconfig-json-重要字段\",\"link\":\"#tsconfig-json-重要字段\",\"children\":[]},{\"level\":3,\"title\":\"compilerOptions 选项\",\"slug\":\"compileroptions-选项\",\"link\":\"#compileroptions-选项\",\"children\":[]}]}],\"readingTime\":{\"minutes\":21.36,\"words\":6408},\"filePathRelative\":\"web/typescript/1-basic-concepts.md\",\"excerpt\":\"<h2>基础类型</h2>\\n<h3>Boolean 类型</h3>\\n<div class=\\\"language-typescript\\\" data-ext=\\\"ts\\\" data-title=\\\"ts\\\"><pre class=\\\"language-typescript\\\"><code><span class=\\\"token keyword\\\">let</span> isDone<span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">boolean</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// ES5：var isDone = false;</span>\\n</code></pre></div>\",\"autoDesc\":true}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
