import comp from "/Users/zeroeldath/Desktop/ignore-space/zero-eldath/whatToolsBlog/src/.vuepress/.temp/pages/web/harmony/1-projectEngineeringStructure.html.vue"
const data = JSON.parse("{\"path\":\"/web/harmony/1-projectEngineeringStructure.html\",\"title\":\"🦋 1-harmony 项目工程结构\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"🦋 1-harmony 项目工程结构\",\"tag\":[\"harmony\"],\"star\":true,\"description\":\"Stage 模型下的工程结构 宏观 微观 AppScope 全局的共有资源存放目录。 entry HarmonyOS工程模块，编译构建生成一个HAP包。 hvigor 构建配置文件信息，是一款全新基于TS实现的前端构建任务编排工具，结合npm包管理机制，主要提供任务管理机制，任务注册编排、工程模型管理、配置管理等关键能力，更符合ArkTS/JS开发者的...\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://soft-vault.com/web/harmony/1-projectEngineeringStructure.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"Night.Soul\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"🦋 1-harmony 项目工程结构\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"Stage 模型下的工程结构 宏观 微观 AppScope 全局的共有资源存放目录。 entry HarmonyOS工程模块，编译构建生成一个HAP包。 hvigor 构建配置文件信息，是一款全新基于TS实现的前端构建任务编排工具，结合npm包管理机制，主要提供任务管理机制，任务注册编排、工程模型管理、配置管理等关键能力，更符合ArkTS/JS开发者的...\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"Night.Soul\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"harmony\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"🦋 1-harmony 项目工程结构\\\",\\\"image\\\":[\\\"\\\"],\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"Night.Soul\\\",\\\"url\\\":\\\"https://github.com/NightSquirrl\\\"}]}\"]]},\"headers\":[{\"level\":2,\"title\":\"Stage 模型下的工程结构\",\"slug\":\"stage-模型下的工程结构\",\"link\":\"#stage-模型下的工程结构\",\"children\":[{\"level\":3,\"title\":\"宏观\",\"slug\":\"宏观\",\"link\":\"#宏观\",\"children\":[]},{\"level\":3,\"title\":\"微观\",\"slug\":\"微观\",\"link\":\"#微观\",\"children\":[]}]}],\"readingTime\":{\"minutes\":2.75,\"words\":825},\"filePathRelative\":\"web/harmony/1-projectEngineeringStructure.md\",\"excerpt\":\"<h2>Stage 模型下的工程结构</h2>\\n<h3>宏观</h3>\\n<div class=\\\"language-bash\\\" data-ext=\\\"sh\\\" data-title=\\\"sh\\\"><pre class=\\\"language-bash\\\"><code>├── AppScope\\n│   ├── app.json5  <span class=\\\"token comment\\\"># 应用的全局配置信息</span>\\n│   └── resources <span class=\\\"token comment\\\"># 全局的配置的资源</span>\\n│       └── base\\n│           ├── element\\n│           │   └── string.json\\n│           └── media\\n│               └── app_icon.png\\n├── build-profile.json5 <span class=\\\"token comment\\\"># 应用级配置信息 包括签名 产品配置</span>\\n├── entry <span class=\\\"token comment\\\"># 应用/服务模块 编译构建生成一个HAP</span>\\n│   ├── build-profile.json5 <span class=\\\"token comment\\\"># 当前的模版信息 编译信息配置项</span>\\n│   ├── hvigorfile.ts <span class=\\\"token comment\\\"># 模块编译构建任务脚本</span>\\n│   ├── oh-package.json5\\n│   └── src\\n│       ├── main\\n│       │   ├── ets <span class=\\\"token comment\\\"># 存放 ARTS 源码</span>\\n│       │   │   ├── entryability\\n│       │   │   │   └── EntryAbility.ts <span class=\\\"token comment\\\"># 应用服务的入口</span>\\n│       │   │   └── pages\\n│       │   │       └── Index.ets <span class=\\\"token comment\\\"># 应用服务包含页面</span>\\n│       │   ├── module.json5 <span class=\\\"token comment\\\"># Stage 模型模块配置模块</span>\\n│       │   └── resources <span class=\\\"token comment\\\"># 用于存放应用服务资源</span>\\n│       │       ├── base\\n│       │       │   ├── element\\n│       │       │   │   ├── color.json\\n│       │       │   │   └── string.json\\n│       │       │   ├── media\\n│       │       │   │   └── icon.png\\n│       │       │   └── profile\\n│       │       │       └── main_pages.json\\n│       │       ├── en_US\\n│       │       │   └── element\\n│       │       │       └── string.json\\n│       │       ├── rawfile\\n│       │       └── zh_CN\\n│       │           └── element\\n│       │               └── string.json\\n│       └── ohosTest\\n│           ├── ets\\n│           │   ├── <span class=\\\"token builtin class-name\\\">test</span>\\n│           │   │   ├── Ability.test.ets\\n│           │   │   └── List.test.ets\\n│           │   ├── testability\\n│           │   │   ├── TestAbility.ets\\n│           │   │   └── pages\\n│           │   │       └── Index.ets\\n│           │   └── testrunner\\n│           │       └── OpenHarmonyTestRunner.ts\\n│           ├── module.json5\\n│           └── resources\\n│               └── base\\n│                   ├── element\\n│                   │   ├── color.json\\n│                   │   └── string.json\\n│                   ├── media\\n│                   │   └── icon.png\\n│                   └── profile\\n│                       └── test_pages.json\\n├── hvigor\\n│   ├── hvigor-config.json5\\n│   └── hvigor-wrapper.js\\n├── hvigorfile.ts <span class=\\\"token comment\\\"># 应用级编译构建脚本</span>\\n├── hvigorw\\n├── hvigorw.bat\\n├── local.properties\\n├── oh-package-lock.json5\\n├── oh-package.json5\\n└── oh_modules <span class=\\\"token comment\\\"># 第三方依赖模块</span>\\n    └── @ohos\\n        └── hypium -<span class=\\\"token operator\\\">&gt;</span> <span class=\\\"token punctuation\\\">..</span>/.ohpm/@ohos+hypium@1.0.6/oh_modules/@ohos/hypium\\n\\n<span class=\\\"token number\\\">37</span> directories, <span class=\\\"token number\\\">34</span> files\\n</code></pre></div>\",\"autoDesc\":true}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
