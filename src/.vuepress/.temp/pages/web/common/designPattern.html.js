import comp from "/Users/zeroeldath/Desktop/ignore-space/zero-eldath/whatToolsBlog/src/.vuepress/.temp/pages/web/common/designPattern.html.vue"
const data = JSON.parse("{\"path\":\"/web/common/designPattern.html\",\"title\":\"🕹️ 19 种设计模式\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"🕹️ 19 种设计模式\",\"tag\":[\"设计模式\",\"前端\"],\"description\":\"1. 构造器模式 2. 原型模式 类 3. 工厂模式 4. 抽象工厂 5. 建造者模式 6. 单例模式 保证一个类只有一个实例 闭包的方式 ES6 7. 装饰器模式 8. 适配器模式 9. 策略模式 10. 代理模式 11. 观察者模式 12. 发布订阅模式 v2 13. 模块化模式 作用域,变量保护 闭包 14. 桥接模式 将抽象部分与他的实现部分分...\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://soft-vault.com/web/common/designPattern.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"Night.Soul\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"🕹️ 19 种设计模式\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"1. 构造器模式 2. 原型模式 类 3. 工厂模式 4. 抽象工厂 5. 建造者模式 6. 单例模式 保证一个类只有一个实例 闭包的方式 ES6 7. 装饰器模式 8. 适配器模式 9. 策略模式 10. 代理模式 11. 观察者模式 12. 发布订阅模式 v2 13. 模块化模式 作用域,变量保护 闭包 14. 桥接模式 将抽象部分与他的实现部分分...\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"Night.Soul\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"设计模式\"}],[\"meta\",{\"property\":\"article:tag\",\"content\":\"前端\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"🕹️ 19 种设计模式\\\",\\\"image\\\":[\\\"\\\"],\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"Night.Soul\\\",\\\"url\\\":\\\"https://github.com/NightSquirrl\\\"}]}\"]]},\"headers\":[{\"level\":2,\"title\":\"1. 构造器模式\",\"slug\":\"_1-构造器模式\",\"link\":\"#_1-构造器模式\",\"children\":[]},{\"level\":2,\"title\":\"2. 原型模式\",\"slug\":\"_2-原型模式\",\"link\":\"#_2-原型模式\",\"children\":[{\"level\":3,\"title\":\"类\",\"slug\":\"类\",\"link\":\"#类\",\"children\":[]}]},{\"level\":2,\"title\":\"3. 工厂模式\",\"slug\":\"_3-工厂模式\",\"link\":\"#_3-工厂模式\",\"children\":[]},{\"level\":2,\"title\":\"4. 抽象工厂\",\"slug\":\"_4-抽象工厂\",\"link\":\"#_4-抽象工厂\",\"children\":[]},{\"level\":2,\"title\":\"5. 建造者模式\",\"slug\":\"_5-建造者模式\",\"link\":\"#_5-建造者模式\",\"children\":[]},{\"level\":2,\"title\":\"6. 单例模式\",\"slug\":\"_6-单例模式\",\"link\":\"#_6-单例模式\",\"children\":[]},{\"level\":2,\"title\":\"7. 装饰器模式\",\"slug\":\"_7-装饰器模式\",\"link\":\"#_7-装饰器模式\",\"children\":[]},{\"level\":2,\"title\":\"8. 适配器模式\",\"slug\":\"_8-适配器模式\",\"link\":\"#_8-适配器模式\",\"children\":[]},{\"level\":2,\"title\":\"9. 策略模式\",\"slug\":\"_9-策略模式\",\"link\":\"#_9-策略模式\",\"children\":[]},{\"level\":2,\"title\":\"10. 代理模式\",\"slug\":\"_10-代理模式\",\"link\":\"#_10-代理模式\",\"children\":[]},{\"level\":2,\"title\":\"11. 观察者模式\",\"slug\":\"_11-观察者模式\",\"link\":\"#_11-观察者模式\",\"children\":[]},{\"level\":2,\"title\":\"12. 发布订阅模式\",\"slug\":\"_12-发布订阅模式\",\"link\":\"#_12-发布订阅模式\",\"children\":[]},{\"level\":2,\"title\":\"13. 模块化模式\",\"slug\":\"_13-模块化模式\",\"link\":\"#_13-模块化模式\",\"children\":[]},{\"level\":2,\"title\":\"14. 桥接模式\",\"slug\":\"_14-桥接模式\",\"link\":\"#_14-桥接模式\",\"children\":[]},{\"level\":2,\"title\":\"15. 组合模式\",\"slug\":\"_15-组合模式\",\"link\":\"#_15-组合模式\",\"children\":[]},{\"level\":2,\"title\":\"16. 命令模式\",\"slug\":\"_16-命令模式\",\"link\":\"#_16-命令模式\",\"children\":[]},{\"level\":2,\"title\":\"17. 模版方法模式\",\"slug\":\"_17-模版方法模式\",\"link\":\"#_17-模版方法模式\",\"children\":[]},{\"level\":2,\"title\":\"18. 迭代器模式\",\"slug\":\"_18-迭代器模式\",\"link\":\"#_18-迭代器模式\",\"children\":[]},{\"level\":2,\"title\":\"19. 职责链模式\",\"slug\":\"_19-职责链模式\",\"link\":\"#_19-职责链模式\",\"children\":[]}],\"readingTime\":{\"minutes\":3.47,\"words\":1042},\"filePathRelative\":\"web/common/designPattern.md\",\"excerpt\":\"<h2>1. 构造器模式</h2>\\n<div class=\\\"language-javascript\\\" data-ext=\\\"js\\\" data-title=\\\"js\\\"><pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">Employee</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">name<span class=\\\"token punctuation\\\">,</span>age</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>name <span class=\\\"token operator\\\">=</span> name\\n  <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>age <span class=\\\"token operator\\\">=</span> age\\n  \\n  <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function-variable function\\\">say</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>name <span class=\\\"token operator\\\">+</span> <span class=\\\"token string\\\">\\\"=\\\"</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token punctuation\\\">,</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>age<span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">let</span> employee1 <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Employee</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"name\\\"</span><span class=\\\"token punctuation\\\">,</span><span class=\\\"token number\\\">20</span><span class=\\\"token punctuation\\\">)</span>\\n</code></pre></div>\",\"autoDesc\":true}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
